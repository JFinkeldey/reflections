How did viewing a diff between two versions of a file help you see the bug that
was introduced?

easier to use tools b/c only differences are displayed.
faster than scanning dozens or thousands of lines manually.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Unforseen errors could require rolling back many changes to an earlier point.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros - In theory your commits are more meaningful, as they aren't set time points.
Conversely, if you don't commit often enough, you could have trouble tracking changes
or introduce bugs you later can't remember why...


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git is designed for environments with linked documents like programs, while
Google docs is primarily for standalone documents.

How can you use the commands git log and git diff to view the history of files?

Git log shows the history of changes - date / time / author / notes
Git diff shows additions and subtractions from one version to another

How might using version control make you more confident to make changes that
could break something?

If commits are made regularyly at logical intervals, bug tracking should be much easier.

Now that you have your workspace set up, what do you want to try using Git for?

Can use for SAS, python, or java code